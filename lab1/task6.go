package main

import "fmt"

func main() {
	var x, y, z uint8

	x = 9
	y = 28
	z = x

	fmt.Println("Битовые операции")
	//Побітове заперечення. На тій позиції, де був 0, буде 1, і, навпаки, де була 1, там буде 0.
	fmt.Printf("^x      = ^(%d)      = ^(%.8b)            = %.8b = %d\n", x, x, ^x, ^x)
	//Зсув вліво. Використовується для зсуву розрядів двійкового числа на деяку позицію вліво.
	fmt.Printf("x << 2  = (%d << 2)  = (%.8b << 2)        = %.8b = %d\n", x, x, x<<2, x<<2)
	//Зсув вправо. Використовується для зсуву розрядів двійкового числа на деяку позицію вправо.
	fmt.Printf("x >> 2  = (%d >> 2)  = (%.8b >> 2)        = %.8b = %d\n", x, x, x>>2, x>>2)
	// Логічне множення(кон’юнкція). Операція, під час якої перемножуються окремо взяті біти числа.
	fmt.Printf("x & y   = (%d & %d)  = (%.8b & %.8b)  = %.8b = %d\n", x, y, x, y, x&y, x&y)
	// Логічне додавання(диз’юнкція). Якщо один з бітів, що сумуються, рівний 1, то результатом буде 1, та 0 в іншому випадку.
	fmt.Printf("x | y   = (%d | %d)  = (%.8b | %.8b)  = %.8b = %d\n", x, y, x, y, x|y, x|y)
	// Логічне виключне додавання. Результуючий біт приймає значення 1, у випадку коли тільки один з операндів рівний 1.
	fmt.Printf("x ^ y   = (%d ^ %d)  = (%.8b ^ %.8b)  = %.8b = %d\n", x, y, x, y, x^y, x^y)
	// Скидання біта. Кожен біт дорівнює 0 якщо відповідний біт y дорівнює 1. Якщо біт y дорівнює 0, то береться значення відповідного біта з x.
	fmt.Printf("x &^ y  = (%d &^ %d) = (%.8b &^ %.8b) = %.8b = %d\n", x, y, x, y, x&^y, x&^y)
	// Залишок. Повертає залишок від ділення. Якщо перше число меньше від другого, то результатом буде перше число.
	fmt.Printf("x %% y   = (%d %% %d)  = (%.8b %% %.8b)  = %.8b = %d\n", x, y, x, y, x%y, x%y)

	fmt.Println("\nБитовые операции с присваиванием")

	// Присвоєння з побітовою операцією І. Присвоєння результату виразу x & y змінної x.
	x = z
	x &= y
	fmt.Printf("x &= y   = (%d &= %d)  = (%.8b &= %.8b)  = %.8b = %d\n", z, y, z, y, x, x)
	// Присвоєння з побітовою операцією АБО. Надання результату виразу x | y змінної x.
	x = z
	x |= y
	fmt.Printf("x |= y   = (%d |= %d)  = (%.8b |= %.8b)  = %.8b = %d\n", z, y, z, y, x, x)
	// Присвоєння з побітовою операцією виключення. Надає результат виразу x ^ y змінної x.
	x = z
	x ^= y
	fmt.Printf("x ^= y   = (%d ^= %d)  = (%.8b ^= %.8b)  = %.8b = %d\n", z, y, z, y, x, x)
	// Присвоєння з скиданням біта. Надає результат виразу x &^ y змінної x.
	x = z
	x &^= y
	fmt.Printf("x &^= y  = (%d &^= %d) = (%.8b &^= %.8b) = %.8b = %d\n", z, y, z, y, x, x)
	// Присвоєння з остачею. Надає результат виразу x %= y змінної x.
	x = z
	x %= y
	fmt.Printf("x %%= y   = (%d %%= %d)  = (%.8b %%= %.8b)  = %.8b = %d\n", z, y, z, y, x, x)

	//Завдання.
	//1. Пояснити результати операцій
	// Пояснено у коментарях вище
}
